# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker –∑–∞–ø—É—Å–∫–∞

Write-Host "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Cyan
Write-Host ""

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Host "1Ô∏è‚É£ –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:" -ForegroundColor Yellow
docker-compose ps
Write-Host ""

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ API
Write-Host "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ API (http://localhost:8000):" -ForegroundColor Yellow
try {
    $apiResponse = Invoke-RestMethod -Uri "http://localhost:8000" -TimeoutSec 5
    Write-Host "   ‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç: $($apiResponse.message)" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç" -ForegroundColor Red
}
Write-Host ""

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ API Stats
Write-Host "3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ API Stats:" -ForegroundColor Yellow
try {
    $statsResponse = Invoke-RestMethod -Uri "http://localhost:8000/stats" -TimeoutSec 5
    Write-Host "   ‚úÖ Stats —Ä–∞–±–æ—Ç–∞–µ—Ç. –°–æ–æ–±—â–µ–Ω–∏–π: $($statsResponse.summary.total_messages)" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå Stats –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç" -ForegroundColor Red
}
Write-Host ""

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend
Write-Host "4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend (http://localhost:3000):" -ForegroundColor Yellow
try {
    $frontendResponse = Invoke-WebRequest -Uri "http://localhost:3000" -TimeoutSec 5 -UseBasicParsing
    if ($frontendResponse.StatusCode -eq 200) {
        Write-Host "   ‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
    }
} catch {
    Write-Host "   ‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç" -ForegroundColor Red
}
Write-Host ""

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
Write-Host "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:" -ForegroundColor Yellow
if (Test-Path "data/messages.db") {
    $dbSize = (Get-Item "data/messages.db").Length / 1KB
    Write-Host "   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞: $([math]::Round($dbSize, 2)) KB" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Red
}
Write-Host ""

# 6. –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –±–æ—Ç–∞
Write-Host "6Ô∏è‚É£ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –±–æ—Ç–∞:" -ForegroundColor Yellow
docker-compose logs --tail=5 bot
Write-Host ""

Write-Host "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host ""
Write-Host "üìñ –ö–æ–º–∞–Ω–¥—ã:" -ForegroundColor Cyan
Write-Host "   docker-compose logs -f        # –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –ª–æ–≥–∏"
Write-Host "   docker-compose logs -f bot    # –õ–æ–≥–∏ –±–æ—Ç–∞"
Write-Host "   docker-compose stop           # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
Write-Host "   docker-compose down           # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å"
Write-Host ""
Write-Host "üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ:" -ForegroundColor Cyan
Write-Host "   start http://localhost:8000   # API"
Write-Host "   start http://localhost:3000   # Frontend"
