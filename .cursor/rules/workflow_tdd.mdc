---
alwaysApply: false
---
# TDD Workflow - Test-Driven Development Process

> Workflow –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–æ TDD –ø–æ–¥—Ö–æ–¥—É. –°–º. —Ç–∞–∫–∂–µ @qa_conventions.mdc

## üéØ –ì–ª–∞–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ TDD

**RED ‚Üí GREEN ‚Üí REFACTOR. –¢–µ—Å—Ç –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–≤—ã–º. –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è.**

---

## üìã TDD –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –∏—Ç–µ—Ä–∞—Ü–∏–µ–π

### 1. –ù–∞—á–∞–ª–æ –∏—Ç–µ—Ä–∞—Ü–∏–∏

**–î–µ–π—Å—Ç–≤–∏—è:**
- [ ] –ü—Ä–æ—á–∏—Ç–∞–π –∑–∞–¥–∞—á–∏ —Ç–µ–∫—É—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –∏–∑ TASKLIST.md
- [ ] –ò–∑—É—á–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏–∑ VISION.md, CONVENTIONS.md, qa_conventions.mdc
- [ ] –û–±–Ω–æ–≤–∏ —Å—Ç–∞—Ç—É—Å –∏—Ç–µ—Ä–∞—Ü–∏–∏ –≤ TASKLIST.md –Ω–∞ `üîÑ –í —Ä–∞–±–æ—Ç–µ`
- [ ] –£–±–µ–¥–∏—Å—å —á—Ç–æ baseline —Ä–∞–±–æ—Ç–∞–µ—Ç: `make ci`

**Baseline check:**
```bash
make ci  # –í—Å–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–µ–ª–µ–Ω—ã–º
```

### 2. –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è + —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤

**–î–µ–π—Å—Ç–≤–∏—è:**
- [ ] –ü—Ä–µ–¥–ª–æ–∂–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
- [ ] **–û–ø—Ä–µ–¥–µ–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ñ–∏—á–∏**
- [ ] –ü–æ–∫–∞–∂–∏ –∫–ª—é—á–µ–≤—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –∫–æ–¥–∞ –∏ —Ç–µ—Å—Ç–æ–≤
- [ ] –û–±—ä—è—Å–Ω–∏ –∫–∞–∫ —Ä–µ—à–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç KISS
- [ ] **–î–æ–∂–¥–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**

**–§–æ—Ä–º–∞—Ç —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è:**
```
–ü—Ä–µ–¥–ª–∞–≥–∞—é TDD —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è [–∑–∞–¥–∞—á–∞]:

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–¥–∞
- –§–∞–π–ª: src/example.py
- –ö–ª–∞—Å—Å: ExampleClass
- –ü—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã: method_a(), method_b()

### –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ (–±—É–¥—É—Ç –Ω–∞–ø–∏—Å–∞–Ω—ã –ü–ï–†–í–´–ú–ò)
1. test_method_a_success_case() - –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π
2. test_method_a_with_empty_input() - –≥—Ä–∞–Ω–∏—á–Ω—ã–π —Å–ª—É—á–∞–π
3. test_method_a_raises_on_invalid() - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
4. test_method_b_integration() - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏

### –ü—Ä–∏–º–µ—Ä –∫–ª—é—á–µ–≤–æ–≥–æ –º–µ—Ç–æ–¥–∞ (–ü–û–°–õ–ï —Ç–µ—Å—Ç–æ–≤)
```python
class ExampleClass:
    async def method_a(self, input: str) -> str:
        """Process input and return result."""
        pass
```

### TDD –ø–ª–∞–Ω
1. üî¥ –ü–∏—à–µ–º test_method_a_success_case() (RED)
2. üü¢ –†–µ–∞–ª–∏–∑—É–µ–º method_a() –º–∏–Ω–∏–º–∞–ª—å–Ω–æ (GREEN)
3. ‚ôªÔ∏è –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–º –µ—Å–ª–∏ –Ω—É–∂–Ω–æ (REFACTOR)
4. –ü–æ–≤—Ç–æ—Ä—è–µ–º –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤

–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º:
‚úÖ KISS - –ø—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ
‚úÖ –¢–µ—Å—Ç—ã –ø–æ–∫—Ä—ã–≤–∞—é—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
‚úÖ 1 –∫–ª–∞—Å—Å = 1 —Ñ–∞–π–ª
‚úÖ –ò–∑–±–µ–≥–∞–µ–º boilerplate —Ç–µ—Å—Ç–æ–≤

–°–æ–≥–ª–∞—Å–æ–≤–∞—Ç—å?
```

### 3. TDD –†–µ–∞–ª–∏–∑–∞—Ü–∏—è (Red-Green-Refactor —Ü–∏–∫–ª—ã)

**–î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è –≤—ã–ø–æ–ª–Ω—è–π —Ü–∏–∫–ª:**

#### üî¥ RED Phase - Failing Test

**–î–µ–π—Å—Ç–≤–∏—è:**
- [ ] –ù–∞–ø–∏—à–∏ failing test –¥–ª—è –æ–¥–Ω–æ–π —Ñ–∏—á–∏
- [ ] –¢–µ—Å—Ç –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä—è—Ç—å –æ–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
- [ ] –ó–∞–ø—É—Å—Ç–∏ `make test` - —Ç–µ—Å—Ç –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–∞–ª–∏—Ç—å—Å—è (RED)

**–®–∞–±–ª–æ–Ω RED:**
```python
# tests/test_example.py

@pytest.mark.asyncio
async def test_method_a_success_case():
    """Test method_a returns processed result on valid input."""
    # Arrange
    instance = ExampleClass()
    test_input = "test data"

    # Act
    result = await instance.method_a(test_input)

    # Assert
    assert result == "processed: test data"
```

**–ö–æ–º–∞–Ω–¥—ã RED:**
```bash
make test  # –î–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–∞–ª–∏—Ç—å—Å—è (RED) ‚ùå
# Expected: AttributeError –∏–ª–∏ AssertionError
```

**–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è RED:**
```
üî¥ RED: test_method_a_success_case

–ù–∞–ø–∏—Å–∞–Ω failing test:
- –¢–µ—Å—Ç–∏—Ä—É–µ—Ç: method_a() —Å –≤–∞–ª–∏–¥–Ω—ã–º –≤–≤–æ–¥–æ–º
- –û–∂–∏–¥–∞–µ—Ç: "processed: test data"

–†–µ–∑—É–ª—å—Ç–∞—Ç make test:
‚ùå FAILED - AttributeError: ExampleClass has no attribute 'method_a'

–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ GREEN —Ñ–∞–∑–µ?
```

#### üü¢ GREEN Phase - Minimal Implementation

**–î–µ–π—Å—Ç–≤–∏—è:**
- [ ] –†–µ–∞–ª–∏–∑—É–π **–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π** –∫–æ–¥ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
- [ ] –ù–µ –¥–æ–±–∞–≤–ª—è–π –ª–∏—à–Ω–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
- [ ] –ó–∞–ø—É—Å—Ç–∏ `make test` - —Ç–µ—Å—Ç –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–π—Ç–∏ (GREEN)
- [ ] –£–±–µ–¥–∏—Å—å —á—Ç–æ —Å—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ —Å–ª–æ–º–∞–ª–∏—Å—å

**–®–∞–±–ª–æ–Ω GREEN:**
```python
# src/example.py

class ExampleClass:
    """Example class with method_a."""

    async def method_a(self, input: str) -> str:
        """
        Process input and return result.

        Args:
            input: Input string to process

        Returns:
            Processed string with prefix
        """
        # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
        return f"processed: {input}"
```

**–ö–æ–º–∞–Ω–¥—ã GREEN:**
```bash
make test       # –ù–æ–≤—ã–π —Ç–µ—Å—Ç –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–π—Ç–∏ (GREEN) ‚úÖ
make test-cov   # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è
```

**–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è GREEN:**
```
üü¢ GREEN: test_method_a_success_case

–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–¥:
- –ú–µ—Ç–æ–¥ method_a() –≤ src/example.py
- –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
- –î–æ–±–∞–≤–ª–µ–Ω docstring

–†–µ–∑—É–ª—å—Ç–∞—Ç make test:
‚úÖ PASSED - test_method_a_success_case

Coverage: 87% (+2%)

–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ REFACTOR —Ñ–∞–∑–µ?
```

#### ‚ôªÔ∏è REFACTOR Phase - Improve Code

**–î–µ–π—Å—Ç–≤–∏—è:**
- [ ] –£–ª—É—á—à–∏ –∫–æ–¥ –µ—Å–ª–∏ –µ—Å—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ/—Å–ª–æ–∂–Ω–æ—Å—Ç—å
- [ ] –°–ª–µ–¥—É–π CONVENTIONS.md
- [ ] –ó–∞–ø—É—Å—Ç–∏ `make ci` - –≤—Å–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å
- [ ] –¢–µ—Å—Ç—ã –æ—Å—Ç–∞—é—Ç—Å—è –∑–µ–ª–µ–Ω—ã–º–∏

**–ö–æ–≥–¥–∞ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏—Ç—å:**
- –í–∏–¥–∏—à—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ (DRY)
- –ö–æ–¥ —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω—ã–π (KISS)
- –ú–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å —á–∏—Ç–∞–µ–º–æ—Å—Ç—å
- –ù–∞—Ä—É—à–µ–Ω—ã —Å–æ–≥–ª–∞—à–µ–Ω–∏—è

**–ö–æ–≥–¥–∞ –ù–ï —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏—Ç—å:**
- –ö–æ–¥ —É–∂–µ –ø—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–µ–Ω
- "–£–ª—É—á—à–µ–Ω–∏—è" —É—Å–ª–æ–∂–Ω—è—é—Ç –∫–æ–¥
- –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ –¥—Ä—É–≥–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è

**–ö–æ–º–∞–Ω–¥—ã REFACTOR:**
```bash
make lint       # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è
make type-check # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
make test       # –¢–µ—Å—Ç—ã –æ—Å—Ç–∞—é—Ç—Å—è –∑–µ–ª–µ–Ω—ã–º–∏ ‚úÖ
make ci         # –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
```

**–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è REFACTOR:**
```
‚ôªÔ∏è REFACTOR: –£–ª—É—á—à–µ–Ω ExampleClass

–ò–∑–º–µ–Ω–µ–Ω–∏—è:
- –í—ã–Ω–µ—Å –æ–±—â—É—é –ª–æ–≥–∏–∫—É –≤ _helper()
- –£–ª—É—á—à–µ–Ω—ã –∏–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
- –î–æ–±–∞–≤–ª–µ–Ω—ã type hints

–†–µ–∑—É–ª—å—Ç–∞—Ç make ci:
‚úÖ lint - —á–∏—Å—Ç
‚úÖ type-check - 0 –æ—à–∏–±–æ–∫
‚úÖ test - –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç
‚úÖ Coverage: 87%

–°–ª–µ–¥—É—é—â–∏–π —Ç–µ—Å—Ç –∏–ª–∏ –≥–æ—Ç–æ–≤–æ?
```

---

### 4. –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤—Å–µ–º —Ç–µ—Å—Ç–æ–≤—ã–º —Å—Ü–µ–Ω–∞—Ä–∏—è–º

**–î–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è –ø–æ–≤—Ç–æ—Ä—è–π:**

```
–°—Ü–µ–Ω–∞—Ä–∏–π 1: test_method_a_success_case
üî¥ RED ‚Üí üü¢ GREEN ‚Üí ‚ôªÔ∏è REFACTOR
   ‚Üì
–°—Ü–µ–Ω–∞—Ä–∏–π 2: test_method_a_with_empty_input
üî¥ RED ‚Üí üü¢ GREEN ‚Üí ‚ôªÔ∏è REFACTOR
   ‚Üì
–°—Ü–µ–Ω–∞—Ä–∏–π 3: test_method_a_raises_on_invalid
üî¥ RED ‚Üí üü¢ GREEN ‚Üí ‚ôªÔ∏è REFACTOR
   ‚Üì
–í—Å–µ —Ç–µ—Å—Ç—ã –∑–µ–ª–µ–Ω—ã–µ ‚úÖ
```

**–ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ü–∏–∫–ª–∞:**
- [ ] –û—Ç–º–µ—Ç—å —á–µ–∫–±–æ–∫—Å –≤ —Å–ø–∏—Å–∫–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
- [ ] –£–±–µ–¥–∏—Å—å —á—Ç–æ `make ci` –ø—Ä–æ—Ö–æ–¥–∏—Ç
- [ ] –î–æ–∂–¥–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π

---

### 5. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏

**–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö TDD —Ü–∏–∫–ª–æ–≤:**
- [ ] –ü–æ–∫–∞–∂–∏ —á—Ç–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ
- [ ] –ü–æ–∫–∞–∂–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã `make ci`
- [ ] –£–∫–∞–∂–∏ –º–µ—Ç—Ä–∏–∫–∏ (coverage, —Ç–µ—Å—Ç—ã)
- [ ] **–î–æ–∂–¥–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**

**–§–æ—Ä–º–∞—Ç:**
```
–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ (TDD):
‚úÖ src/example.py - –∫–ª–∞—Å—Å ExampleClass
‚úÖ tests/test_example.py - 4 —Ç–µ—Å—Ç–∞

–í—Å–µ TDD —Ü–∏–∫–ª—ã –ø—Ä–æ–π–¥–µ–Ω—ã:
‚úÖ test_method_a_success_case (RED ‚Üí GREEN ‚Üí REFACTOR)
‚úÖ test_method_a_with_empty_input (RED ‚Üí GREEN ‚Üí REFACTOR)
‚úÖ test_method_a_raises_on_invalid (RED ‚Üí GREEN ‚Üí REFACTOR)
‚úÖ test_method_b_integration (RED ‚Üí GREEN ‚Üí REFACTOR)

–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–∞—á–µ—Å—Ç–≤–∞:
‚úÖ make ci - –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–µ–ª–µ–Ω—ã–π
‚úÖ Coverage: 85% ‚Üí 89%
‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã: 24 passed
‚úÖ Mypy: 0 errors
‚úÖ Ruff: 0 issues

–ì–æ—Ç–æ–≤–æ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ?
```

---

### 6. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏—Ç–µ—Ä–∞—Ü–∏–∏

**–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:**
- [ ] –û–±–Ω–æ–≤–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ TASKLIST.md:
  - –°—Ç–∞—Ç—É—Å –Ω–∞ `‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ`
  - –î–∞—Ç—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  - –ú–µ—Ç—Ä–∏–∫–∏ –≤ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è—Ö
- [ ] –ü—Ä–µ–¥–ª–æ–∂–∏ —Ç–µ–∫—Å—Ç –∫–æ–º–º–∏—Ç–∞ —Å TDD –º–µ—Ç—Ä–∏–∫–∞–º–∏
- [ ] **–î–æ–∂–¥–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏**

**–§–æ—Ä–º–∞—Ç –∫–æ–º–º–∏—Ç–∞:**
```
feat: [–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏—Ç–µ—Ä–∞—Ü–∏–∏] (TDD)

–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ:
- [–∫–ª–∞—Å—Å/–º–æ–¥—É–ª—å] —Å –ø–æ–ª–Ω—ã–º test coverage
- [–º–µ—Ç–æ–¥ 1] —Å edge cases
- [–º–µ—Ç–æ–¥ 2] —Å error handling

–¢–µ—Å—Ç—ã (TDD approach):
- tests/test_example.py: 4 –Ω–æ–≤—ã—Ö —Ç–µ—Å—Ç–∞
- Coverage: 85% ‚Üí 89%
- All tests: 24 passed

Refs: TASKLIST.md - –ò—Ç–µ—Ä–∞—Ü–∏—è N
```

---

## üé® TDD –®–∞–±–ª–æ–Ω—ã

### –®–∞–±–ª–æ–Ω RED —Ñ–∞–∑—ã

```python
# üî¥ RED: –ü–∏—à–µ–º failing test

def test_feature_scenario():
    """Test feature behavior in specific scenario."""
    # Arrange
    setup = prepare_test_data()

    # Act
    result = feature(setup)

    # Assert
    assert result == expected_value
```

**Checklist RED:**
- [ ] –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–¥–Ω—É —Ñ–∏—á—É
- [ ] –ü–æ–Ω—è—Ç–Ω–æ–µ –∏–º—è —Ç–µ—Å—Ç–∞
- [ ] AAA —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (Arrange-Act-Assert)
- [ ] `make test` –ø—Ä–æ–≤–∞–ª–∏–≤–∞–µ—Ç—Å—è (RED) ‚ùå

### –®–∞–±–ª–æ–Ω GREEN —Ñ–∞–∑—ã

```python
# üü¢ GREEN: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è

def feature(input_data):
    """
    Feature description.

    Args:
        input_data: Input description

    Returns:
        Result description
    """
    # –ü—Ä–æ—Å—Ç–µ–π—à–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
    return process(input_data)
```

**Checklist GREEN:**
- [ ] –ö–æ–¥ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π (–Ω–µ –±–æ–ª—å—à–µ –Ω—É–∂–Ω–æ–≥–æ)
- [ ] –ï—Å—Ç—å docstring
- [ ] –ï—Å—Ç—å type hints
- [ ] `make test` –ø—Ä–æ—Ö–æ–¥–∏—Ç (GREEN) ‚úÖ
- [ ] –°—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ —Å–ª–æ–º–∞–ª–∏—Å—å

### –®–∞–±–ª–æ–Ω REFACTOR —Ñ–∞–∑—ã

**Checklist REFACTOR:**
- [ ] –£–±—Ä–∞–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (DRY)
- [ ] –ö–æ–¥ —É–ø—Ä–æ—â–µ–Ω (KISS)
- [ ] –°–ª–µ–¥—É–µ—Ç CONVENTIONS.md
- [ ] `make ci` –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–µ–ª–µ–Ω—ã–π ‚úÖ
- [ ] –¢–µ—Å—Ç—ã –æ—Å—Ç–∞—é—Ç—Å—è –∑–µ–ª–µ–Ω—ã–º–∏

---

## ‚ö†Ô∏è TDD –ø—Ä–∞–≤–∏–ª–∞

### –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–µ–ª–∞–π

‚ùå **–ù–µ –ø–∏—à–∏ –∫–æ–¥ –¥–æ —Ç–µ—Å—Ç–∞** (—Ç–æ–ª—å–∫–æ GREEN –ø–æ—Å–ª–µ RED)
‚ùå **–ù–µ –ø–∏—à–∏ –±–æ–ª—å—à–µ –∫–æ–¥–∞** —á–µ–º –Ω—É–∂–Ω–æ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
‚ùå **–ù–µ –ø—Ä–æ–ø—É—Å–∫–∞–π RED —Ñ–∞–∑—É** ("—Ç–µ—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫—Ä–∞—Å–Ω—ã–º")
‚ùå **–ù–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π REFACTOR** –µ—Å–ª–∏ –∫–æ–¥ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –∏–ª–∏ —Å–ª–æ–∂–µ–Ω
‚ùå **–ù–µ –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ç–µ—Å—Ç—É** –ø–æ–∫–∞ —Ç–µ–∫—É—â–∏–π –Ω–µ GREEN
‚ùå **–ù–µ –ø–∏—à–∏ boilerplate —Ç–µ—Å—Ç—ã** (—Å–º. qa_conventions.mdc)

### –í—Å–µ–≥–¥–∞ –¥–µ–ª–∞–π

‚úÖ **–ù–∞—á–∏–Ω–∞–π —Å —Ç–µ—Å—Ç–∞** (RED —Ñ–∞–∑–∞)
‚úÖ **–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–¥** –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è (GREEN —Ñ–∞–∑–∞)
‚úÖ **–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏** (REFACTOR —Ñ–∞–∑–∞)
‚úÖ **–ó–∞–ø—É—Å–∫–∞–π `make test`** –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π —Ñ–∞–∑—ã
‚úÖ **–ü—Ä–æ–≤–µ—Ä—è–π `make ci`** –ø–æ—Å–ª–µ REFACTOR
‚úÖ **–ñ–¥–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è** –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ü–∏–∫–ª–æ–º

---

## üîÑ –ü—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–≥–æ TDD —Ü–∏–∫–ª–∞

```
1. –ß–∏—Ç–∞–µ—à—å: –ò—Ç–µ—Ä–∞—Ü–∏—è N –∏–∑ TASKLIST.md
   ‚Üì
2. –ü—Ä–µ–¥–ª–∞–≥–∞–µ—à—å: –†–µ—à–µ–Ω–∏–µ + —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
   ‚Üì
3. –ñ–¥–µ—à—å: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
   ‚Üì
4. TDD –¶–∏–∫–ª –¥–ª—è –°—Ü–µ–Ω–∞—Ä–∏—è 1:

   4.1. üî¥ RED:
        - –ü–∏—à–µ—à—å failing test
        - make test (RED ‚ùå)
        - –ü–æ–∫–∞–∑—ã–≤–∞–µ—à—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        - –ñ–¥–µ—à—å: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ

   4.2. üü¢ GREEN:
        - –ü–∏—à–µ—à—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–¥
        - make test (GREEN ‚úÖ)
        - –ü–æ–∫–∞–∑—ã–≤–∞–µ—à—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        - –ñ–¥–µ—à—å: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ

   4.3. ‚ôªÔ∏è REFACTOR (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ):
        - –£–ª—É—á—à–∞–µ—à—å –∫–æ–¥
        - make ci (GREEN ‚úÖ)
        - –ü–æ–∫–∞–∑—ã–≤–∞–µ—à—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        - –ñ–¥–µ—à—å: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
   ‚Üì
5. –ü–æ–≤—Ç–æ—Ä—è–µ—à—å: –¶–∏–∫–ª –¥–ª—è –°—Ü–µ–Ω–∞—Ä–∏–µ–≤ 2, 3, ...
   ‚Üì
6. –°–æ–æ–±—â–∞–µ—à—å: –í—Å–µ –≥–æ—Ç–æ–≤–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ—à—å –º–µ—Ç—Ä–∏–∫–∏
   ‚Üì
7. –û–±–Ω–æ–≤–ª—è–µ—à—å: TASKLIST.md
   ‚Üì
8. –ü—Ä–µ–¥–ª–∞–≥–∞–µ—à—å: –¢–µ–∫—Å—Ç –∫–æ–º–º–∏—Ç–∞ —Å TDD –º–µ—Ç—Ä–∏–∫–∞–º–∏
   ‚Üì
9. –ñ–¥–µ—à—å: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é
```

---

## üìù TDD –ß–µ–∫-–ª–∏—Å—Ç –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º

- [ ] Baseline –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω (`make ci` –∑–µ–ª–µ–Ω—ã–π)
- [ ] –û–ø—Ä–µ–¥–µ–ª–µ–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
- [ ] –ü–æ–Ω—è—Ç–µ–Ω –æ–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞
- [ ] –ü–ª–∞–Ω —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
- [ ] –ì–æ—Ç–æ–≤ –ø–∏—Å–∞—Ç—å —Ç–µ—Å—Ç—ã –ü–ï–†–í–´–ú–ò

---

## üìù TDD –ß–µ–∫-–ª–∏—Å—Ç –¥–ª—è –∫–∞–∂–¥–æ–π —Ñ–∞–∑—ã

### RED Phase ‚úÖ
- [ ] –¢–µ—Å—Ç –Ω–∞–ø–∏—Å–∞–Ω –¥–ª—è –æ–¥–Ω–æ–π —Ñ–∏—á–∏
- [ ] –¢–µ—Å—Ç –ø–∞–¥–∞–µ—Ç —Å –ø–æ–Ω—è—Ç–Ω–æ–π –æ—à–∏–±–∫–æ–π
- [ ] `make test` –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç RED ‚ùå
- [ ] –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞ GREEN

### GREEN Phase ‚úÖ
- [ ] –ö–æ–¥ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π
- [ ] –¢–µ—Å—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç
- [ ] `make test` –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç GREEN ‚úÖ
- [ ] –°—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ —Å–ª–æ–º–∞–ª–∏—Å—å
- [ ] –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞ REFACTOR

### REFACTOR Phase ‚úÖ
- [ ] –ö–æ–¥ —É–ª—É—á—à–µ–Ω (–µ—Å–ª–∏ –±—ã–ª–æ —á—Ç–æ —É–ª—É—á—à–∞—Ç—å)
- [ ] –°–ª–µ–¥—É–µ—Ç CONVENTIONS.md
- [ ] `make ci` –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–µ–ª–µ–Ω—ã–π ‚úÖ
- [ ] –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ—Å—Ç

---

## üìä TDD –ú–µ—Ç—Ä–∏–∫–∏ —É—Å–ø–µ—Ö–∞

–û—Ç—Å–ª–µ–∂–∏–≤–∞–π –ø—Ä–∏ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏:

### Test Metrics
- [ ] –¢–µ—Å—Ç–æ–≤ –Ω–∞–ø–∏—Å–∞–Ω–æ: [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
- [ ] –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç: ‚úÖ
- [ ] Coverage: [–¥–æ]% ‚Üí [–ø–æ—Å–ª–µ]%

### Code Quality
- [ ] Ruff: 0 issues
- [ ] Mypy: 0 errors
- [ ] Cyclomatic complexity: [–∑–Ω–∞—á–µ–Ω–∏–µ]

### TDD Process
- [ ] RED ‚Üí GREEN ‚Üí REFACTOR —Ü–∏–∫–ª–æ–≤: [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
- [ ] –¢–µ—Å—Ç–æ–≤ –¥–æ –∫–æ–¥–∞: 100%
- [ ] –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è: ‚úÖ

---

## üéØ –¶–µ–ª—å TDD Workflow

**–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ —Å –ø–æ–ª–Ω—ã–º test coverage —á–µ—Ä–µ–∑ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥: —Ç–µ—Å—Ç –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–≤—ã–º, –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è, —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Å safety net.**

---

## üí° TDD Best Practices

### –†–∞–∑–º–µ—Ä —à–∞–≥–æ–≤
- **–ú–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏** –ª—É—á—à–µ –±–æ–ª—å—à–∏—Ö
- –û–¥–∏–Ω —Ç–µ—Å—Ç = –æ–¥–Ω–∞ —Ñ–∏—á–∞
- –õ—É—á—à–µ 5 –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ü–∏–∫–ª–æ–≤ —á–µ–º 1 –±–æ–ª—å—à–æ–π

### –ü–æ—Ä—è–¥–æ–∫ —Ç–µ—Å—Ç–æ–≤
1. **Happy path** (–æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π)
2. **Edge cases** (–≥—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏)
3. **Error handling** (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫)
4. **Integration** (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏)

### –ú–∏–Ω–∏–º–∞–ª–∏–∑–º –≤ GREEN
```python
# ‚ùå –ü–ª–æ—Ö–æ: —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–æ–¥–∞
def process(data):
    # –ü—Ä–µ–¥—É–≥–∞–¥—ã–≤–∞–µ–º –±—É–¥—É—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    if validate(data) and check_limits(data) and ...:
        # 50 —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞

# ‚úÖ –•–æ—Ä–æ—à–æ: –º–∏–Ω–∏–º—É–º –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
def process(data):
    return transform(data)
```

### –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Å —É–º–æ–º
- –ù–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏ –µ—Å–ª–∏ –∫–æ–¥ –ø—Ä–æ—Å—Ç–æ–π
- –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏ –µ—Å–ª–∏ –≤–∏–¥–∏—à—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
- –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏ –µ—Å–ª–∏ –∫–æ–¥ —Å–ª–æ–∂–Ω—ã–π –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è
- –ù–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏ "–¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã"

---

> **–ü–æ–º–Ω–∏:** RED ‚Üí GREEN ‚Üí REFACTOR. –î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ TDD = –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–¥. –¢–µ—Å—Ç –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–≤—ã–º!
