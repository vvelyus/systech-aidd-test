name: Build and Publish Docker Images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [bot, api, frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        run: |
          # Get short SHA (first 7 characters)
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT

          # Lowercase repository name for GHCR
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "repo_lower=${REPO_LOWER}" >> $GITHUB_OUTPUT

      - name: Set build context and dockerfile
        id: build_config
        run: |
          SERVICE="${{ matrix.service }}"

          if [ "$SERVICE" = "frontend" ]; then
            # Frontend uses its own directory as context to avoid root .dockerignore
            echo "context=./frontend/web" >> $GITHUB_OUTPUT
            echo "dockerfile=Dockerfile" >> $GITHUB_OUTPUT
          else
            # Bot and API use root context
            echo "context=." >> $GITHUB_OUTPUT
            echo "dockerfile=devops/Dockerfile.$SERVICE" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ steps.build_config.outputs.context }}
          file: ${{ steps.build_config.outputs.dockerfile }}
          # Push only for push to main, not for PRs (build-only for PRs)
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ steps.meta.outputs.repo_lower }}/${{ matrix.service }}:latest
            ghcr.io/${{ steps.meta.outputs.repo_lower }}/${{ matrix.service }}:${{ steps.meta.outputs.short_sha }}
          cache-from: type=gha,scope=${{ matrix.service }}-v2
          cache-to: type=gha,mode=max,scope=${{ matrix.service }}-v2
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
